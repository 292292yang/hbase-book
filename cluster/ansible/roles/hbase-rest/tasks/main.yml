---
# Purpose: Install HBase REST Gateway
#
# Notes:
#   - Executed on specific servers in the cluster

- name: Create HBase related directories (secure mode)
  file: path={{ item.path }} owner={{ item.owner }} group=hadoop mode={{ item.mode }} recurse=yes state=directory
  with_items:
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].logs }}', owner: 'hbase-rest', mode: 755 }
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].pid }}', owner: 'hbase-rest', mode: 755 }
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].config }}', owner: 'hbase-rest', mode: 775 }
    - { path: '{{ HBASE_TEMP_DIR }}', owner: 'hdfs', mode: 775 }
  when: SECURITY_ENABLED == true

- name: Create HBase related directories (non-secure mode)
  file: path={{ item.path }} owner={{ item.owner }} group=hadoop mode={{ item.mode }} recurse=yes state=directory
  with_items:
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].logs }}', owner: 'hadoop', mode: 775 }
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].pid }}', owner: 'hadoop', mode: 775 }
    - { path: '{{ PATHS_BY_OWNER["hbase-rest"].config }}', owner: 'hadoop', mode: 775 }
  when: SECURITY_ENABLED == false

#- name: Download HBase to local machine
#  local_action: get_url url={{ HBASE_DOWNLOAD_LINK }}/{{ HBASE_VERSION }}/hbase-{{ HBASE_VERSION }}-bin.tar.gz dest=downloads
#  when: DOWNLOAD_ONCE

- name: Download HBase
  get_url: url={{ HBASE_DOWNLOAD_LINK }}/{{ HBASE_VERSION }}/hbase-{{ HBASE_VERSION }}-bin.tar.gz dest=/tmp/hbase-{{ HBASE_VERSION }}-bin.tar.gz mode=0644
  when: REMOTE_FETCH_TARBALLS == true

- name: Untar HBase (using remote fetch)
  unarchive: src=/tmp/hbase-{{ HBASE_VERSION }}-bin.tar.gz dest={{ PACKAGE_BASE }} owner=hadoop group=hadoop copy=no creates={{ PACKAGE_BASE }}/hbase-{{ HBASE_VERSION }}
  when: REMOTE_FETCH_TARBALLS == true

- name: Untar HBase (using local fetch)
  unarchive: src=files/downloads/hbase-{{ HBASE_VERSION }}-bin.tar.gz dest={{ PACKAGE_BASE }} owner=hadoop group=hadoop copy=yes creates={{ PACKAGE_BASE }}/hbase-{{ HBASE_VERSION }}
  when: REMOTE_FETCH_TARBALLS == false

- name: Symlink hbase
  file: src={{ PACKAGE_BASE }}/hbase-{{ HBASE_VERSION }} path={{ HBASE_HOME }} state=link owner=hadoop group=hadoop

- name: Put HBase configuration in place
  template: src={{ item.src }} dest={{ item.dest }} owner=hbase-rest group=hadoop mode=0644
  with_items:
    - { src: 'etc/hbase-rest/conf/hbase-env.sh.j2', dest: '{{ PATHS_BY_OWNER["hbase-rest"].config }}/hbase-env.sh' }
    - { src: 'etc/hbase-rest/conf/hbase-site.xml.j2', dest: '{{ PATHS_BY_OWNER["hbase-rest"].config }}/hbase-site.xml' }
    - { src: 'etc/hbase-rest/conf/hbase-jaas.conf.j2', dest: '{{ PATHS_BY_OWNER["hbase-rest"].config }}/hbase-jaas.conf' }

# Also: log4j.properties

# Configure service script

- name: Install HBase REST startup scripts
  template: src={{ item.src }} dest=/etc/systemd/system/{{ item.dest }} owner=root group=root mode=755 backup=yes
  with_items:
    - { src: "etc/systemd/system/hbase-rest.service.j2", dest: "hbase-rest.service"}